<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="stack_8c" kind="file" language="C++">
    <compoundname>stack.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="stack_8h" local="yes">stack.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>stack.c</label>
        <link refid="stack_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stack.h</label>
        <link refid="stack_8h"/>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stack_8c_1a6423a880df59733d2d9b509c7718d3a9" prot="public" static="no">
        <name>STACK_SIZE</name>
        <initializer>10240</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="11" column="9" bodyfile="stack.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stack_8c_1aeb70e1c7695e56df3a1ee0767941da6c" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long STACK[STACK_SIZE]</definition>
        <argsstring>[STACK_SIZE]</argsstring>
        <name>STACK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="13" column="6" bodyfile="stack.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="stack_8c_1a1910d262855b71da353ed0d07a6c7823" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int pos</definition>
        <argsstring></argsstring>
        <name>pos</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="14" column="5" bodyfile="stack.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stack_8c_1abaec816a6e4dd4cb1d4e70112b01b2e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IsEmpty</definition>
        <argsstring>()</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Esta função verifica se a stack está vazia. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>o valor 1 se estiver vazia, o valor 0 se não estiver vazia </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="23" column="5" bodyfile="stack.c" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1ac58ee82791c8e5f2bd410f38c169915a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IsFull</definition>
        <argsstring>()</argsstring>
        <name>IsFull</name>
        <briefdescription>
<para>Esta função verifica se a stack está cheia. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>o valor 1 se estiver cheia, o valor 0 se não estiver cheia </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="40" column="5" bodyfile="stack.c" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1a34ace9ea14f7963d831d53b6a4d79e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void push</definition>
        <argsstring>(long valor)</argsstring>
        <name>push</name>
        <param>
          <type>long</type>
          <declname>valor</declname>
        </param>
        <briefdescription>
<para>Esta função adiciona um elemento no topo da stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>valor</parametername>
</parameternamelist>
<parameterdescription>
<para>O valor que vai ser inserido na stack </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="57" column="6" bodyfile="stack.c" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1abea78f7ba35d074a49d68afb77f48e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
<para>Esta função retira o elemento que está no topo a stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O elemento que foi retirado da stack </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="71" column="6" bodyfile="stack.c" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1a540185d45c89d8413108e0c0a75a0958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pop_double</definition>
        <argsstring>(long *operando1, long *operando2)</argsstring>
        <name>pop_double</name>
        <param>
          <type>long *</type>
          <declname>operando1</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>operando2</declname>
        </param>
        <briefdescription>
<para>Esta função prepara uma operação aritmética envolvendo 2 operandos. </para>
        </briefdescription>
        <detaileddescription>
<para>A função retira os dois elementos que estão no topo da stack Cada elemento retirado é guardado em um endereço de memória para mais tarde efetuar o push da operação aritmética envolvendo estes dois elementos</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>operando1</parametername>
</parameternamelist>
<parameterdescription>
<para>endereço de memória que vai guardar um elemento retirado da stack </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operando2</parametername>
</parameternamelist>
<parameterdescription>
<para>endereço de memória que vai guardar o outro elemento retirado da stack </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="91" column="6" bodyfile="stack.c" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="stack_8c_1a7aeed04bb4cb6fc409ffe0144bdb8f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintStack</definition>
        <argsstring>()</argsstring>
        <name>PrintStack</name>
        <briefdescription>
<para>Esta função mostra o conteúdo que está na stack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="stack.c" line="102" column="6" bodyfile="stack.c" bodystart="102" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stack_8h" kindref="compound">stack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_SIZE<sp/>10240</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1aeb70e1c7695e56df3a1ee0767941da6c" kindref="member">STACK</ref>[<ref refid="stack_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref>];<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref><sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>A<sp/>posição<sp/>que<sp/>contém<sp/>a<sp/>posição<sp/>do<sp/>topo<sp/>da<sp/>stack,<sp/>sendo<sp/>-1<sp/>quando<sp/>a<sp/>stack<sp/>está<sp/>vazia</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1abaec816a6e4dd4cb1d4e70112b01b2e5" kindref="member">IsEmpty</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stack_vazia<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref><sp/>==<sp/>-1)<sp/>stack_vazia<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack_vazia;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1ac58ee82791c8e5f2bd410f38c169915a" kindref="member">IsFull</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stack_cheia<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref><sp/>==<sp/><ref refid="stack_8c_1a6423a880df59733d2d9b509c7718d3a9" kindref="member">STACK_SIZE</ref><sp/>-<sp/>1)<sp/>stack_cheia<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack_cheia;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a34ace9ea14f7963d831d53b6a4d79e7c" kindref="member">push</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valor)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="stack_8c_1ac58ee82791c8e5f2bd410f38c169915a" kindref="member">IsFull</ref>())</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack_8c_1aeb70e1c7695e56df3a1ee0767941da6c" kindref="member">STACK</ref>[++<ref refid="stack_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref>]<sp/>=<sp/>valor;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1abea78f7ba35d074a49d68afb77f48e28" kindref="member">pop</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="stack_8c_1abaec816a6e4dd4cb1d4e70112b01b2e5" kindref="member">IsEmpty</ref>())<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1aeb70e1c7695e56df3a1ee0767941da6c" kindref="member">STACK</ref>[<ref refid="stack_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref>--];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a540185d45c89d8413108e0c0a75a0958" kindref="member">pop_double</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*operando1,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*operando2)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>*operando2<sp/>=<sp/><ref refid="stack_8c_1abea78f7ba35d074a49d68afb77f48e28" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>*operando1<sp/>=<sp/><ref refid="stack_8c_1abea78f7ba35d074a49d68afb77f48e28" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8c_1a7aeed04bb4cb6fc409ffe0144bdb8f3c" kindref="member">PrintStack</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="stack_8c_1a1910d262855b71da353ed0d07a6c7823" kindref="member">pos</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%ld&quot;</highlight><highlight class="normal">,<sp/><ref refid="stack_8c_1aeb70e1c7695e56df3a1ee0767941da6c" kindref="member">STACK</ref>[i]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="stack.c"/>
  </compounddef>
</doxygen>
